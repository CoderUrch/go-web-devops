# .github/workflows/ci-cd.yaml

name: CI/CD Direct EKS Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Compile Go App
        run: go build -o go-web-app

      - name: Run Unit Tests
        run: go test ./...

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.56.2

  push-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{ github.run_id }}
            ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: push-image
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure kubectl for EKS
        uses: giovannirossini/aws-eks@v2.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "eu-north-1"
          cluster-name: "demo-cluster"
          kubectl-version: "1.28"
          command: |
            # Ingress setup separated for clarity
            kubectl get ns ingress-nginx || \
              kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/aws/deploy.yaml

            kubectl wait --namespace ingress-nginx \
              --for=condition=ready \
              pod --selector=app.kubernetes.io/component=controller --timeout=120s

            # App deployment sequence with rollout status checks
            kubectl apply -f k8s/manifests/deployment.yaml
            kubectl rollout status deployment/go-web-app --timeout=60s

            kubectl apply -f k8s/manifests/service.yaml
            kubectl apply -f k8s/manifests/ingress.yaml

            kubectl get ingress -n default
